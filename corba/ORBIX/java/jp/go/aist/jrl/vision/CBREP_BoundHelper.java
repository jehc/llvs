// **********************************************************************
//
// Generated by the Orbix/E IDL to Java Translator
//
// Copyright (c) 2003
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 2.0.1

package jp.go.aist.jrl.vision;

//
// IDL:CBREP_Bound:1.0
//
final public class CBREP_BoundHelper
{
    public static void
    insert(org.omg.CORBA.Any any, CBREP_Bound val)
    {
        org.omg.CORBA.portable.OutputStream out = any.create_output_stream();
        write(out, val);
        any.read_value(out.create_input_stream(), type());
    }

    public static CBREP_Bound
    extract(org.omg.CORBA.Any any)
    {
        if(any.type().equivalent(type()))
            return read(any.create_input_stream());
        else
            throw new org.omg.CORBA.BAD_OPERATION();
    }

    private static org.omg.CORBA.TypeCode typeCode_;

    public static org.omg.CORBA.TypeCode
    type()
    {
        if(typeCode_ == null)
        {
            org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init();
            org.omg.CORBA.StructMember[] members = new org.omg.CORBA.StructMember[6];

            members[0] = new org.omg.CORBA.StructMember();
            members[0].name = "label";
            members[0].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[1] = new org.omg.CORBA.StructMember();
            members[1].name = "n";
            members[1].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[2] = new org.omg.CORBA.StructMember();
            members[2].name = "nsegment";
            members[2].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[3] = new org.omg.CORBA.StructMember();
            members[3].name = "npoint";
            members[3].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[4] = new org.omg.CORBA.StructMember();
            members[4].name = "segment";
            members[4].type = CBREP_SegmentSeqHelper.type();

            members[5] = new org.omg.CORBA.StructMember();
            members[5].name = "point";
            members[5].type = CBREP_PointSeqHelper.type();

            typeCode_ = orb.create_struct_tc(id(), "CBREP_Bound", members);
        }

        return typeCode_;
    }

    public static String
    id()
    {
        return "IDL:CBREP_Bound:1.0";
    }

    public static CBREP_Bound
    read(org.omg.CORBA.portable.InputStream in)
    {
        CBREP_Bound _ob_v = new CBREP_Bound();
        _ob_v.label = in.read_long();
        _ob_v.n = in.read_long();
        _ob_v.nsegment = in.read_long();
        _ob_v.npoint = in.read_long();
        _ob_v.segment = CBREP_SegmentSeqHelper.read(in);
        _ob_v.point = CBREP_PointSeqHelper.read(in);
        return _ob_v;
    }

    public static void
    write(org.omg.CORBA.portable.OutputStream out, CBREP_Bound val)
    {
        out.write_long(val.label);
        out.write_long(val.n);
        out.write_long(val.nsegment);
        out.write_long(val.npoint);
        CBREP_SegmentSeqHelper.write(out, val.segment);
        CBREP_PointSeqHelper.write(out, val.point);
    }
}
