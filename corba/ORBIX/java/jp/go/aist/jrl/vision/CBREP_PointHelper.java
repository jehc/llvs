// **********************************************************************
//
// Generated by the Orbix/E IDL to Java Translator
//
// Copyright (c) 2003
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 2.0.1

package jp.go.aist.jrl.vision;

//
// IDL:CBREP_Point:1.0
//
final public class CBREP_PointHelper
{
    public static void
    insert(org.omg.CORBA.Any any, CBREP_Point val)
    {
        org.omg.CORBA.portable.OutputStream out = any.create_output_stream();
        write(out, val);
        any.read_value(out.create_input_stream(), type());
    }

    public static CBREP_Point
    extract(org.omg.CORBA.Any any)
    {
        if(any.type().equivalent(type()))
            return read(any.create_input_stream());
        else
            throw new org.omg.CORBA.BAD_OPERATION();
    }

    private static org.omg.CORBA.TypeCode typeCode_;

    public static org.omg.CORBA.TypeCode
    type()
    {
        if(typeCode_ == null)
        {
            org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init();
            org.omg.CORBA.StructMember[] members = new org.omg.CORBA.StructMember[19];

            members[0] = new org.omg.CORBA.StructMember();
            members[0].name = "label";
            members[0].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[1] = new org.omg.CORBA.StructMember();
            members[1].name = "n";
            members[1].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[2] = new org.omg.CORBA.StructMember();
            members[2].name = "row";
            members[2].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[3] = new org.omg.CORBA.StructMember();
            members[3].name = "col";
            members[3].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[4] = new org.omg.CORBA.StructMember();
            members[4].name = "rowd";
            members[4].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[5] = new org.omg.CORBA.StructMember();
            members[5].name = "cold";
            members[5].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[6] = new org.omg.CORBA.StructMember();
            members[6].name = "Xr";
            members[6].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[7] = new org.omg.CORBA.StructMember();
            members[7].name = "Yr";
            members[7].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[8] = new org.omg.CORBA.StructMember();
            members[8].name = "x";
            members[8].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[9] = new org.omg.CORBA.StructMember();
            members[9].name = "y";
            members[9].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[10] = new org.omg.CORBA.StructMember();
            members[10].name = "z";
            members[10].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[11] = new org.omg.CORBA.StructMember();
            members[11].name = "normals";
            members[11].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[12] = new org.omg.CORBA.StructMember();
            members[12].name = "Normal";
            members[12].type = orb.create_array_tc(3, orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float));

            members[13] = new org.omg.CORBA.StructMember();
            members[13].name = "Tangent";
            members[13].type = orb.create_array_tc(3, orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float));

            members[14] = new org.omg.CORBA.StructMember();
            members[14].name = "curvature";
            members[14].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[15] = new org.omg.CORBA.StructMember();
            members[15].name = "error";
            members[15].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[16] = new org.omg.CORBA.StructMember();
            members[16].name = "red";
            members[16].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);

            members[17] = new org.omg.CORBA.StructMember();
            members[17].name = "green";
            members[17].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);

            members[18] = new org.omg.CORBA.StructMember();
            members[18].name = "blue";
            members[18].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);

            typeCode_ = orb.create_struct_tc(id(), "CBREP_Point", members);
        }

        return typeCode_;
    }

    public static String
    id()
    {
        return "IDL:CBREP_Point:1.0";
    }

    public static CBREP_Point
    read(org.omg.CORBA.portable.InputStream in)
    {
        CBREP_Point _ob_v = new CBREP_Point();
        _ob_v.label = in.read_long();
        _ob_v.n = in.read_long();
        _ob_v.row = in.read_long();
        _ob_v.col = in.read_long();
        _ob_v.rowd = in.read_float();
        _ob_v.cold = in.read_float();
        _ob_v.Xr = in.read_float();
        _ob_v.Yr = in.read_float();
        _ob_v.x = in.read_float();
        _ob_v.y = in.read_float();
        _ob_v.z = in.read_float();
        _ob_v.normals = in.read_float();
        int len0 = 3;
        _ob_v.Normal = new float[len0];
        in.read_float_array(_ob_v.Normal, 0, len0);
        int len1 = 3;
        _ob_v.Tangent = new float[len1];
        in.read_float_array(_ob_v.Tangent, 0, len1);
        _ob_v.curvature = in.read_float();
        _ob_v.error = in.read_float();
        _ob_v.red = in.read_octet();
        _ob_v.green = in.read_octet();
        _ob_v.blue = in.read_octet();
        return _ob_v;
    }

    public static void
    write(org.omg.CORBA.portable.OutputStream out, CBREP_Point val)
    {
        out.write_long(val.label);
        out.write_long(val.n);
        out.write_long(val.row);
        out.write_long(val.col);
        out.write_float(val.rowd);
        out.write_float(val.cold);
        out.write_float(val.Xr);
        out.write_float(val.Yr);
        out.write_float(val.x);
        out.write_float(val.y);
        out.write_float(val.z);
        out.write_float(val.normals);
        int len0 = val.Normal.length;
        if(len0 != 3)
             throw new org.omg.CORBA.MARSHAL();
        out.write_float_array(val.Normal, 0, len0);
        int len1 = val.Tangent.length;
        if(len1 != 3)
             throw new org.omg.CORBA.MARSHAL();
        out.write_float_array(val.Tangent, 0, len1);
        out.write_float(val.curvature);
        out.write_float(val.error);
        out.write_octet(val.red);
        out.write_octet(val.green);
        out.write_octet(val.blue);
    }
}
