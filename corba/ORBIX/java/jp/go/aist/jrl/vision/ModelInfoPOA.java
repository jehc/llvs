// **********************************************************************
//
// Generated by the Orbix/E IDL to Java Translator
//
// Copyright (c) 2003
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 2.0.1

package jp.go.aist.jrl.vision;

//
// IDL:ModelInfo:1.0
//
public abstract class ModelInfoPOA
    extends org.omg.PortableServer.Servant
    implements org.omg.CORBA.portable.InvokeHandler,
               ModelInfoOperations
{
    static final String[] _ob_ids_ =
    {
        "IDL:ModelInfo:1.0",
    };

    public ModelInfo
    _this()
    {
        return ModelInfoHelper.narrow(super._this_object());
    }

    public ModelInfo
    _this(org.omg.CORBA.ORB orb)
    {
        return ModelInfoHelper.narrow(super._this_object(orb));
    }

    public String[]
    _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId)
    {
        return _ob_ids_;
    }

    public org.omg.CORBA.portable.OutputStream
    _invoke(String opName,
            org.omg.CORBA.portable.InputStream in,
            org.omg.CORBA.portable.ResponseHandler handler)
    {
        final String[] _ob_names =
        {
            "destroy",
            "getCharObject",
            "getJointList",
            "getUrl",
            "readTriangles"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            int _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(opName);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            else if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // destroy
            return _OB_op_destroy(in, handler);

        case 1: // getCharObject
            return _OB_op_getCharObject(in, handler);

        case 2: // getJointList
            return _OB_op_getJointList(in, handler);

        case 3: // getUrl
            return _OB_op_getUrl(in, handler);

        case 4: // readTriangles
            return _OB_op_readTriangles(in, handler);
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_destroy(org.omg.CORBA.portable.InputStream in,
                   org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        destroy();
        out = handler.createReply();
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_getCharObject(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        ParserCharObject _ob_r = getCharObject();
        out = handler.createReply();
        ParserCharObjectHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_getJointList(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String[] _ob_r = getJointList();
        out = handler.createReply();
        jp.go.aist.jrl.vision.ModelInfoPackage.NameSeqHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_getUrl(org.omg.CORBA.portable.InputStream in,
                  org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_r = getUrl();
        out = handler.createReply();
        out.write_string(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_readTriangles(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = in.read_string();
        int _ob_a1 = in.read_long();
        float[] _ob_r = readTriangles(_ob_a0, _ob_a1);
        out = handler.createReply();
        jp.go.aist.jrl.vision.ModelInfoPackage.floatSeqHelper.write(out, _ob_r);
        return out;
    }
}
