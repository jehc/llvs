// **********************************************************************
//
// Generated by the Orbix/E IDL to Java Translator
//
// Copyright (c) 2003
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 2.0.1

package jp.go.aist.jrl.vision;

//
// IDL:ParserModelObject:1.0
//
public abstract class ParserModelObjectPOA
    extends org.omg.PortableServer.Servant
    implements org.omg.CORBA.portable.InvokeHandler,
               ParserModelObjectOperations
{
    static final String[] _ob_ids_ =
    {
        "IDL:ParserModelObject:1.0",
    };

    public ParserModelObject
    _this()
    {
        return ParserModelObjectHelper.narrow(super._this_object());
    }

    public ParserModelObject
    _this(org.omg.CORBA.ORB orb)
    {
        return ParserModelObjectHelper.narrow(super._this_object(orb));
    }

    public String[]
    _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId)
    {
        return _ob_ids_;
    }

    public org.omg.CORBA.portable.OutputStream
    _invoke(String opName,
            org.omg.CORBA.portable.InputStream in,
            org.omg.CORBA.portable.ResponseHandler handler)
    {
        final String[] _ob_names =
        {
            "_get_absAttitude",
            "_get_absComPos",
            "_get_absComVel",
            "_get_absPos",
            "_get_absVel",
            "_get_bboxCenter",
            "_get_bboxSize",
            "_get_daughter",
            "_get_dh",
            "_get_encoderPulse",
            "_get_gearRatio",
            "_get_inertia",
            "_get_jointAcc",
            "_get_jointAxis",
            "_get_jointId",
            "_get_jointType",
            "_get_jointValue",
            "_get_jointVel",
            "_get_llimit",
            "_get_lvlimit",
            "_get_mass",
            "_get_mother",
            "_get_name",
            "_get_omega",
            "_get_omega_d",
            "_get_positionGiven",
            "_get_relAcc",
            "_get_relAttitude",
            "_get_relComAcc",
            "_get_relComPos",
            "_get_relForce",
            "_get_relPos",
            "_get_relTorque",
            "_get_rotateJoint",
            "_get_rotorInertia",
            "_get_rotorResistor",
            "_get_sensors",
            "_get_sister",
            "_get_torqueConst",
            "_get_ulimit",
            "_get_uvlimit"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            int _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(opName);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            else if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // _get_absAttitude
            return _OB_att_get_absAttitude(in, handler);

        case 1: // _get_absComPos
            return _OB_att_get_absComPos(in, handler);

        case 2: // _get_absComVel
            return _OB_att_get_absComVel(in, handler);

        case 3: // _get_absPos
            return _OB_att_get_absPos(in, handler);

        case 4: // _get_absVel
            return _OB_att_get_absVel(in, handler);

        case 5: // _get_bboxCenter
            return _OB_att_get_bboxCenter(in, handler);

        case 6: // _get_bboxSize
            return _OB_att_get_bboxSize(in, handler);

        case 7: // _get_daughter
            return _OB_att_get_daughter(in, handler);

        case 8: // _get_dh
            return _OB_att_get_dh(in, handler);

        case 9: // _get_encoderPulse
            return _OB_att_get_encoderPulse(in, handler);

        case 10: // _get_gearRatio
            return _OB_att_get_gearRatio(in, handler);

        case 11: // _get_inertia
            return _OB_att_get_inertia(in, handler);

        case 12: // _get_jointAcc
            return _OB_att_get_jointAcc(in, handler);

        case 13: // _get_jointAxis
            return _OB_att_get_jointAxis(in, handler);

        case 14: // _get_jointId
            return _OB_att_get_jointId(in, handler);

        case 15: // _get_jointType
            return _OB_att_get_jointType(in, handler);

        case 16: // _get_jointValue
            return _OB_att_get_jointValue(in, handler);

        case 17: // _get_jointVel
            return _OB_att_get_jointVel(in, handler);

        case 18: // _get_llimit
            return _OB_att_get_llimit(in, handler);

        case 19: // _get_lvlimit
            return _OB_att_get_lvlimit(in, handler);

        case 20: // _get_mass
            return _OB_att_get_mass(in, handler);

        case 21: // _get_mother
            return _OB_att_get_mother(in, handler);

        case 22: // _get_name
            return _OB_att_get_name(in, handler);

        case 23: // _get_omega
            return _OB_att_get_omega(in, handler);

        case 24: // _get_omega_d
            return _OB_att_get_omega_d(in, handler);

        case 25: // _get_positionGiven
            return _OB_att_get_positionGiven(in, handler);

        case 26: // _get_relAcc
            return _OB_att_get_relAcc(in, handler);

        case 27: // _get_relAttitude
            return _OB_att_get_relAttitude(in, handler);

        case 28: // _get_relComAcc
            return _OB_att_get_relComAcc(in, handler);

        case 29: // _get_relComPos
            return _OB_att_get_relComPos(in, handler);

        case 30: // _get_relForce
            return _OB_att_get_relForce(in, handler);

        case 31: // _get_relPos
            return _OB_att_get_relPos(in, handler);

        case 32: // _get_relTorque
            return _OB_att_get_relTorque(in, handler);

        case 33: // _get_rotateJoint
            return _OB_att_get_rotateJoint(in, handler);

        case 34: // _get_rotorInertia
            return _OB_att_get_rotorInertia(in, handler);

        case 35: // _get_rotorResistor
            return _OB_att_get_rotorResistor(in, handler);

        case 36: // _get_sensors
            return _OB_att_get_sensors(in, handler);

        case 37: // _get_sister
            return _OB_att_get_sister(in, handler);

        case 38: // _get_torqueConst
            return _OB_att_get_torqueConst(in, handler);

        case 39: // _get_ulimit
            return _OB_att_get_ulimit(in, handler);

        case 40: // _get_uvlimit
            return _OB_att_get_uvlimit(in, handler);
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_absAttitude(org.omg.CORBA.portable.InputStream in,
                            org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = absAttitude();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_absComPos(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = absComPos();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_absComVel(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = absComVel();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_absPos(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = absPos();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_absVel(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = absVel();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_bboxCenter(org.omg.CORBA.portable.InputStream in,
                           org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = bboxCenter();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_bboxSize(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = bboxSize();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_daughter(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        int _ob_r = daughter();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_long(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_dh(org.omg.CORBA.portable.InputStream in,
                   org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = dh();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_encoderPulse(org.omg.CORBA.portable.InputStream in,
                             org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = encoderPulse();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_gearRatio(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = gearRatio();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_inertia(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = inertia();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_jointAcc(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = jointAcc();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_jointAxis(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        String _ob_r = jointAxis();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_string(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_jointId(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        short _ob_r = jointId();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_short(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_jointType(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        String _ob_r = jointType();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_string(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_jointValue(org.omg.CORBA.portable.InputStream in,
                           org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = jointValue();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_jointVel(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = jointVel();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_llimit(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = llimit();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_lvlimit(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = lvlimit();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_mass(org.omg.CORBA.portable.InputStream in,
                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = mass();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_mother(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        int _ob_r = mother();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_long(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_name(org.omg.CORBA.portable.InputStream in,
                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        String _ob_r = name();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_string(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_omega(org.omg.CORBA.portable.InputStream in,
                      org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = omega();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_omega_d(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = omega_d();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_positionGiven(org.omg.CORBA.portable.InputStream in,
                              org.omg.CORBA.portable.ResponseHandler handler)
    {
        boolean _ob_r = positionGiven();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_boolean(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_relAcc(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = relAcc();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_relAttitude(org.omg.CORBA.portable.InputStream in,
                            org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = relAttitude();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_relComAcc(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = relComAcc();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_relComPos(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = relComPos();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_relForce(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = relForce();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_relPos(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = relPos();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_relTorque(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = relTorque();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueMatrixHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_rotateJoint(org.omg.CORBA.portable.InputStream in,
                            org.omg.CORBA.portable.ResponseHandler handler)
    {
        boolean _ob_r = rotateJoint();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_boolean(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_rotorInertia(org.omg.CORBA.portable.InputStream in,
                             org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = rotorInertia();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_rotorResistor(org.omg.CORBA.portable.InputStream in,
                              org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = rotorResistor();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_sensors(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        SensorInfo[] _ob_r = sensors();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        SensorInfoSeqHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_sister(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        int _ob_r = sister();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_long(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_torqueConst(org.omg.CORBA.portable.InputStream in,
                            org.omg.CORBA.portable.ResponseHandler handler)
    {
        double _ob_r = torqueConst();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        out.write_double(_ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_ulimit(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = ulimit();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_uvlimit(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        double[] _ob_r = uvlimit();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ValueHelper.write(out, _ob_r);
        return out;
    }
}
